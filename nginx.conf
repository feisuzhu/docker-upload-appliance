user www-data;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
	worker_connections 768;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    upstream processors {
       server localhost:8080;
       server localhost:8081;
    }

    server {
        listen 80;

        client_max_body_size 100m;

        location /upload {
            include /upload/cors.conf;
            if ( $request_method = OPTIONS ) {
                more_set_headers "Access-Control-Max-Age: 1200";
                return 204;
            }

            upload_pass @upload;
            upload_store /upload/files/tmp;
            upload_state_store /upload/files/state_store;
            upload_resumable on;

            upload_store_access user:r;
            upload_aggregate_form_field "$upload_field_name" "$upload_tmp_path|$upload_file_size|$upload_file_sha1|$upload_file_name";

            upload_cleanup 400 404 499 500-505;
        }

        location @upload {
            include /upload/cors.conf;
            proxy_pass  http://localhost:8080;
        }

        location /files {
            include /upload/cors.conf;
            more_set_headers "Access-Control-Allow-Methods: GET, DELETE";

            if ( $request_method = OPTIONS ) {
                more_set_headers "Access-Control-Max-Age: 1200";
                return 204;
            }

            if ( $request_method != GET) {
                proxy_pass http://processors;
                break;
            }
            alias /upload/files/store;
        }
    }
}

